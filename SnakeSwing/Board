import javax.swing.JPanel;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JFrame;
/*
* Name: Tyler Marzano
* Date: May 8, 2019
* Program Name: Board.java
* Description:
*/

public class Board extends JFrame
{
Color backgroundColor = new Color(255,105,180);
private final JPanel panel;
private final SnakeComponent game;

public Board()
{
	super("Snake");
	panel = new JPanel();
	game = new SnakeComponent();
	init();
}
public void addPanel()
{
	this.add(panel);
	setResizable(false);
	setDefaultCloseOperation(EXIT_ON_CLOSE);
	pack();
	setVisible(true);
}
public void init()
{
	panel.add(game);
	panel.setBackground(Color.BLACK);
		//key listener stuff - instead of inner class add the methods inside of {}
		super.addKeyListener(new KeyListener() {
			@Override
			public void keyTyped(KeyEvent e) {}
			@Override
			public void keyPressed(KeyEvent e)
			{
				switch(e.getKeyCode()) {
				case KeyEvent.VK_RIGHT:
					if(!game.leftPressed && !game.paused) {
						game.setRightPressed(true);
						game.setUpPressed(false);
						game.setDownPressed(false);
						break;
					
					}
				case KeyEvent.VK_LEFT:
					if(!game.rightPressed && !game.paused) {
						game.setLeftPressed(true);
						game.setUpPressed(false);
						game.setDownPressed(false);
						break;
					}
				case KeyEvent.VK_UP:
					if(!game.downPressed && !game.paused) {
						game.setUpPressed(true);
						game.setRightPressed(false);
						game.setLeftPressed(false);
						break;
					}
				case KeyEvent.VK_DOWN:
					if(!game.upPressed && !game.paused) {
						game.setDownPressed(true);
						game.setLeftPressed(false);
						game.setRightPressed(false);
						break;
					}
				case KeyEvent.VK_SPACE:
					if (!game.paused)
						game.setPaused(true);
					else
						game.setPaused(false);
					break;
			}
		}
			@Override
			public void keyReleased(KeyEvent e)
			{
			/*
				switch(e.getKeyCode()) {
			case KeyEvent.VK_RIGHT:
				game.setRightPressed(false);
				break;
			case KeyEvent.VK_LEFT:
				game.setLeftPressed(false);
				break;
			case KeyEvent.VK_UP:
				game.setUpPressed(false);
				break;
			case KeyEvent.VK_DOWN:
				game.setDownPressed(false);
				break;
				
				}
			*/
			}
		});
}
public void run()
{
	game.start();
}
}

